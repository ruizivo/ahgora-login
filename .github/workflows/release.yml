# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: release CI-CD

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-20.04
    name: Build ahgora-login
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
          
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '5.0.x'

      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      
      - name: Versioning
        run: |
          dotnet tool install -g GitVersion.Tool --version=5.6.4
          dotnet gitversion /output json /config "${{ github.workspace }}/GitVersion.yml"
          echo "SemVer=$(dotnet gitversion /output json /config "${{ github.workspace }}/GitVersion.yml" /showvariable FullSemVer /verbosity Quiet)" >> $GITHUB_ENV

      - name: Set versions on neutralino.config.json
        run: |
          sed -i 's/%SemVer%/${{ env.SemVer }}/g' manifest.json
          sed -i 's/0.0.0/${{ env.SemVer }}/g' neutralino.config.json


      - name: install neutralinojs
        run: npm install -g @neutralinojs/neu

      - name: intall dependencies
        run: npm install
        working-directory: app

      - name: update neutralino project
        run: neu update

      - name: build app react
        run: npm run build
        working-directory: app

      - name: build neutralino project
        run: neu build

      # - name: Upload artifacts
      #   if: success()
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ahgora-login
      #     path: dist

      - name: Create Release zip
        uses: vimtor/action-zip@v1.2
        with:
          files: dist/
          dest: ahgora-login.zip

      # - name: Upload resources Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: resources.neu
      #     path: dist/ahgora-login/resources.neu

      # - name: Upload manifest Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: manifest.json
      #     path: manifest.json
      
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: v${{ env.SemVer }}
          tag: v${{ env.SemVer }}
          artifacts: "ahgora-login.zip"
          token: ${{ secrets.AHGORA_LOGIN_TOKEN }}
      

      - name: Copy the files to pages
        run: |
            mkdir -p ${{ github.workspace }}/pages
            cp "${{ github.workspace }}/dist/ahgora-login/resources.neu" "${{ github.workspace }}/pages/resources.neu"
            cp "${{ github.workspace }}/manifest.json" "${{ github.workspace }}/pages/manifest.json"

      - name: Push pra o github pages
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: gh-pages # The branch name where you want to push the assets
          FOLDER: pages # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.AHGORA_LOGIN_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Update manifest.json and resources.neu: v${{ env.SemVer }}" # The commit message
